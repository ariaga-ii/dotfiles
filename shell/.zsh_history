ls
cd .zsh_sessions
ls
d
d
d
0
ls
dirs -v
+${0}
ls
fzf
brew install fzf
brew -h
/opt/homebrew/bin/brew shellenv
brew
brew install fzf
brew reinstall fzf
fx
ls
ls
cd .config
ls
git clone git@github.com:zsh-users/zsh-completions.git 
ls
git submodule add zsh-completions
ls
git status
git reset .gitmodules .gitignore
git status
git checkout -- RectangleConfig.json
git checkout -- .gitmodules
git status
git submodule add git@github.com:zsh-users/zsh-completions.git
ls
git status
git add .
git status
git reset cache
ls
git status
git reset .local
git status
nvim .gitignore
git checkout -- .gitignore
git reset .gitignore
git status
git status
git commit -m 'mac cleanup'
git status
fzf
ls -a
cd ..
ls
ls -a
\

fx
git clone --depth 1 git@github.com:unixorn/fzf-zsh-plugin.git
ls
cd fzf-zsh-plugin
ls
ls
cd ..
ls
cd ..
ls
cd ..
ls
mkdir bin
cd binm
cd bin
ln -s ~/.local/share/fzf-zsh-plugin/bin .
ls
cd bin
ls
cd ..
ls
c ..
cd .
cd ..
ls
ls
brew install jq
brew install rg
fx
#
\

ls
fx
l;s
ls
rm -Rf *
utop
ocaml
haskell
make lang
git status
git submodule update
git submodule init
git status
git submodule init
git submodule update
ls
cd
nvim .zshrc
ls
source ~/.zshrc
ls
ls
ls
cd projects
ls
git clone git@github.com:crawdaddie/yalce.git
ls
cd yalce
ls
git status
git branch
git fetch
git fetch --all
git branch
git status
ls
make
ls
brew install libsoundio
make
ls
cd lib
ls
ls
cd ..
ls
nvim
cd ..
ls
ls -G
cd yalce
ls
nvim
ls
llvm
brew link llvm
ls
brew install llvm
brew link llvm
brew link llvm --force
make lang
cd ..
ls
cd llvm-cpp
ls
make lang
./lang
ls
ls
cd
nvim .zshrc
ls
make libyalce_synth.so
make libyalce_synth.so
make libyalce_synth.so
brew install libsoundio
brew install libsndfile
make libyalce_synth.so
ls
make synth
ls
ls -lG
ls
ls -G
./synth
cd ..
ls
n
git clone git@github.com:crawdaddie/llvm-cpp.git 
cd llvm-cpp
ls
git branch
git checkout feat/new-codegen
ls
make
ls
nvim
make lang
.PHONY: parser\
parser:\
	flex -o src/lexer.cpp src/lexer.l\
	bison -d -o src/parser.cpp src/parser.y\

ls
make synth
fx
ls
nvim
make
make clean
make
cd
ls
cd .config
ls
cd shell
ls
touch vi-mode.plugin.zsh
nvim vi-mode.plugin.zsh
fx
nvim
cd
ls
nvim .config/nvim/init.lua
nvim
nvim
cd
ls
nvim .zshrc
cd projects/yalce
ls
make synth
make synth
make synth
./synth
make libyalce_synth.so
ls
make clean
make libyalce_synth.so
ls
pythoh
python
python3
brew install miniforge
conda init "$(basename "${SHELL}")"
ls
python
ls
python
conda_setup
ls
python
conda install numpy
python
python
conda_setup
python
ls
python
conda install ipython
conda install ptpython
ls
cd /opt
fx
conda_setup
nvim conda
nvim 
\:q
nvim conda
which python
ls
$CONDA_DEFAULT_ENV
echo $CONDA_DEFAULT_ENV
cd /opt/
fx
which python
which python
ls
ls
cd
nvim .zshrc
ls
python3
python
ls
nvim
nvim .zshrc
nvim
nvim 
ls
ls -a
cd .config
ls
fx
ls
fx
ls
nvim
which python
conda config
ls
ls
conda init
ls
conda_setup
ls
echo $CONDA_PREFIX
ls
which python
echo $CONDA_ENV
echo $CONDA_PREFIX
ls
echo $CONDA_PREFIX
condasetup
conda_setup
s
conda_setup
echo $CONDA_PREFIX
conda_info
echo $CONDA_PREFIX
which pip
ls
ls
mkdir -p build
cd build
ls
cmake -G Xcode -DCMAKE_PREFIX_PATH=`brew --prefix qt` -DSC_USE_QTWEBENGINE=OFF ..
cmake -DCMAKE_PREFIX_PATH=`brew --prefix qt` -DSC_USE_QTWEBENGINE=OFF ..
cd ..
git submodule update --init --recursive
cd build
cmake -DCMAKE_PREFIX_PATH=`brew --prefix qt` -DSC_USE_QTWEBENGINE=OFF ..
cmake -DCMAKE_PREFIX_PATH=`brew --prefix qt` -DSC_USE_QTWEBENGINE=OFF ..
brew --prefix qt5
brew link qt5 --force
cmake -DCMAKE_PREFIX_PATH=`brew --prefix qt` -DSC_USE_QTWEBENGINE=OFF ..
cmake -DCMAKE_PREFIX_PATH=`brew --prefix qt` -DSC_USE_QTWEBENGINE=OFF ..
brew uninstall qt5
brew install portaudio fftw
brew install qt5
cd build
cmake -DSC_QT=OFF -DSC_USE_QTWEBENGINE=OFF ..
ls
cmake -LH
cmake -DSC_QT=OFF -DSC_USE_QTWEBENGINE=OFF ..
cmake --build . --target install --config RelWithDebInfo
cmake --build . --target install --config Release
cmake -DSC_QT=OFF -DSC_USE_QTWEBENGINE=OFF -DNATIVE=ON -DSUPERNOVA=ON ..
cmake --build . --target install --config Release
ls
ls
cd Install
ls
cd SuperCollider
ls
cd SuperCollider.app
ls
ls
cd Contents
ls
cd MacOS
ls
./sclang
ls
cd ..
ls
cd Resources
ls
./scsynth
./scsynth -u
./scsynth -u 50710
cd ..
ls
cd ..
ls
cd ..
ls
cp SuperCollider.app /Applications
cp -R SuperCollider.app /Applications/
ls
cd /Applications
ls
cd ~/bin
ls
ls
cd bin
ls
cd ..
ls
mv bin fzf-bin
ls
ls
ln -s /Applications/SuperCollider.app/Contents/MacOS/sclang .
ls
ln -s /Applications/SuperCollider.app/Contents/Resources/scsynth .
ln -s /Applications/SuperCollider.app/Contents/Resources/supernova .
ls
./supernova
scsynth
ls
scsynth
./scsynth
scsynth -u 57110
ls
cd
ls
ls bin
ls
scsynth
sclang
supernova
source .zshrc
ls
scsynth
scsynth -u 57110
d
cd
ls
cd .config/nvim
ls
nvim
nvim
sclang
ls
cd /Applications/SuperCollider.app/Contents/MacOS/SCClassLibrary
ls
ls -a
cd ..
ls
cd SCClassLibrary
ls
ls
ls
cd ..
ls
ls
cd ..
ls
cd Resources
ls
fx
ls
cd MacOS
ls
rm -Rf SCClassLibrary
ls
cp -R ~/projects/supercollider-src/SCClassLibrary .
ls
cd 
cd projects
ls
cd supercollider-src
ls
cd SCClassLibrary
ls
ls
cd
sclang
$?
$?
ls
$?
__conda_setup
    __conda_setup="$('/opt/homebrew/Caskroom/miniforge/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"\

eval "$__conda_setup"
ls
echo $CONDA_PREFIX
which python
ls
conda env list
conda_setup
ls
ls -a
conda config
ls
ls
ls -a
nvim .condarc
echo $CONDA_PREFIX
basename $CONDA_PREFIX
nvim
nvim .zshrc
nvim .zshrc
conda_info
conda_info
conda_info
conda_setup
ls
echo $CONDA_ENV
echo $CONDA_PREFIX
echo $PATH
ls
cabal install -h
cabal install
cabal build
cabal install
ls
cabal install --lib 
cabal list
cabal list-bin
cabal info
cabal info hsc3
cabal install hsc3
ghci
curl --proto '=https' --tlsv1.2 -sSf https://get-ghcup.haskell.org | sh
ghci
source ~/.zshrc
ls
ghci
ghci
ls -a
touch .ghci
nvim .ghci
ghci
cd projects
ls
$ git clone https://gitlab.com/rd--/hsc3\

git clone https://gitlab.com/rd--/hsc3\

ls
cd hsc3
ls
cabal install
cat README.md
cabal install .
nvim 
cd
ls
ghci
ghci
cabal install hosc
cabal install --lib hosc
ghci
scsynth -u 57110
make
make synth
./synth
man vprintf
ls
fx
touch colored-man-pages.plugin.zsh
ls
pbpaste > colored-man-pages.plugin.zsh
ls
nvim colored-man-pages.plugin.zsh
ls
cd ..
ls
ls -a
cd ..
ls
nvim .zshrc
man vprintf
./synth
ls
make
./synth
tail -f log.txt
make synth
make synth
./synth
make
make
make
make
./synth
clang -shared -o funcs.c
clang -shared -o funcs.so funcs.c
ls
make
make
./synth
make
./synth
./synth
make
./synth
make
./synth
make
./synth
make
make
./synth
make
./synth
ls
./synth
./synth
./synth
make
./synth
make
./synth
make
make
make
./synth
make
./synth
make
./synth
make
./synth
make
./synth
./synth
make
./synth
make
./synth
make
./synth
clang -shared -o funcs.so funcs.c
./synth
clang -shared -o funcs.so funcs.c
make
./synth
./synth
make
./synth
make
./synth
./synth
make
./synth
make
./synth
make
./synth
make
./synth
fx
nm libyalce_synth.so
make libyalce_synth.so
make libyalce_synth.so
clang -ldl test.c -o test
./test
clang -ldl test.c -o test
./test
clang -ldl test.c -o test
./test
clang -ldl test.c -o test
./test
clang -ldl test.c -o test
./test
clang -ldl test.c -o test
./test
clang -ldl test.c -o test
./test
clang -ldl test.c -o test
./test
./synth
make
./synth
make
make
./synth
ls
ls
cd
ls
fx
ls
git branch
ls
fx
ls
ls
fx
ls
cd
ls
nvim .config/nvim/init.lua
nvim
ls
fx
ls
fx
nvim
nvim
nvim
nvim
nvim
cd ..
ls
git clone git@github.com:supercollider/supercollider.git supercollider-src
ls
fx
ls
nvim
cd
nvim .zshrc
cd projects
ls
mkdir puzzles
ls
cd puzzles
ls
cd ..
rm -Rf puzzles
ls
touch 24_game.py
nvim
fx
ls
cd
ls
fx
fx
nvim
nvim
nvim
nvim
nvim
ls
cd
cd .config
ls
cd nvim
ls
nvim init.lua
ls
ls
cd ..
ls
fx
ls
cd
ls
cd .config/kitty
ls
nvim
nm synth
nm synth | fzf
ls
cd src
ls
clang -cc1 -ast-view ctx.c
v
gv
cd ..
make
synth
func
./synth
make
./synth
which python
python 24_game.py
python 24_game.py
python 24_game.py
python 24_game.py
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 1 2 3 4
python 24_game.py 4 1 8 7
python 24_game.py 4 1 8 7
python 24_game.py 4 1 8 7
python 24_game.py 1 2 3 4
ls
fx
nvim
ls
cd ~/.config/kitty
ls
nvim kitty.conf
nvim kitty.conf
ranger
fx
ls
nvim
ls
nvim
nvim
fx
ls
ls
ls
ls
fx
ls
ls
ls
ls
ranger
fx
ls
nvim
ls
cd projects
ls
cd yalce
nvim
fx
ls
git status
ls
ls
ls
ls
cd
cd .config/\ 
ls
cd .config/kitty
ls
nvim kitty.conf
